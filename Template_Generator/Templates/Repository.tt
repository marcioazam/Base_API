<#@ template language="C#" hostspecific="true" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ include file="Configuration/DependencyName.ttinclude" #>
<#@ import namespace="System.CodeDom.Compiler" #>
<#
    // Caminho onde os arquivos serão gerados
    string outputDir = @"C:\Users\Márcio\source\repos\Base_API\Infrastructure\Repositories";

    // Nome do arquivo
    string fileName = dependecyName + "Repository.cs";

    // Caminho completo do arquivo
    string outputPath = Path.Combine(outputDir, fileName);

    // Definir o 'using' a ser adicionado
    string newUsing = $"using Domain.Commands.{dependecyName}Commands;";

    // Verificar se o diretório existe, se não, criar
    if (!Directory.Exists(outputDir))
    {
        Directory.CreateDirectory(outputDir);
    }

    // Verificar se o arquivo já existe
    if (!File.Exists(outputPath))
    {

        // Conteúdo do arquivo
        string fileContent = $@"using AutoMapper;
using Infrastructure.Context;
using Infrastructure.Repositories.Base;

namespace Infrastructure.Repositories
{{
    public class {dependecyName}Repository(DefaultContext context, IMapper imapper) : BaseRepository<{dependecyName}Table, {dependecyName}>(context, imapper), I{dependecyName}Repository
    {{
    }}
}}";

        // Gravar o arquivo
        File.WriteAllText(outputPath, fileContent);
  }
  else
  {
        // Gerar um aviso informando que o arquivo já existe
        var warning = new CompilerError(null, 0, 0, null, $"Arquivo '{fileName}' já existe. Nenhuma ação foi tomada.");
        warning.IsWarning = true; // Define como aviso
        this.Errors.Add(warning);
  }
#>